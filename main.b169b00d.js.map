{"version":3,"sources":["scripts/main.js"],"names":["url","details","getPhones","link","Promise","resolve","reject","fetch","then","listOfPhonesDetailes","json","res","setTimeout","Error","firstRecievedArea","document","createElement","firstRecievedTitle","innerText","li","append","listOfPhones","getFirstReceivedDetails","phonesIdArr","promises","map","id","race","classList","add","body","allSuccessArea","allSuccessText","ul","getAllSuccessfulDetails","resultArr","listItem","name","allSettled","phones","phonesIDArr","phone","push","array"],"mappings":"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","file":"main.b169b00d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url\n  = `https://mate-academy.github.io/phone-catalogue-static/api/phones.json`;\nconst details\n  = `https://mate-academy.github.io/phone-catalogue-static/api/phones/`;\n\nfunction getPhones(link) {\n  return new Promise((resolve, reject) => {\n    fetch(link)\n      .then((listOfPhonesDetailes) => listOfPhonesDetailes.json())\n      .then((res) => {\n        resolve(res);\n      });\n\n    setTimeout(() => {\n      reject(new Error('timeOut'));\n    }, 5000);\n  });\n}\n\nconst firstRecievedArea = document.createElement('div');\nconst firstRecievedTitle = document.createElement('p');\n\nfirstRecievedTitle.innerText = 'First Received';\n\nconst li = document.createElement('li');\n\nfirstRecievedArea.append(li);\n\nconst listOfPhones = document.createElement('ul');\n\nlistOfPhones.append(li);\nfirstRecievedArea.append(listOfPhones);\nfirstRecievedArea.append(firstRecievedTitle);\nfirstRecievedArea.classList.add('first-received');\n\ndocument.body.append(firstRecievedArea);\n\nfunction getFirstReceivedDetails(phonesIdArr) {\n  const promises = phonesIdArr.map((id) => fetch(`${details}${id}.json`));\n\n  return Promise.race(promises)\n    .then((res) => res.json())\n    .then((listOfPhonesDetailes) => (li.innerText = listOfPhonesDetailes.id));\n}\n\nconst allSuccessArea = document.createElement('div');\n\nallSuccessArea.classList.add('all-successful');\n\nconst allSuccessText = document.createElement('p');\n\nallSuccessText.innerText = 'All Successful';\n\nconst ul = document.createElement('ul');\n\nallSuccessArea.append(ul);\nallSuccessArea.append(allSuccessText);\n\nfunction getAllSuccessfulDetails(phonesIdArr) {\n  const resultArr = phonesIdArr.map((id) => {\n    return fetch(`${details}${id}.json`)\n      .then((listOfPhonesDetailes) => listOfPhonesDetailes.json())\n      .then((listOfPhonesDetailes) => {\n        const listItem = document.createElement('li');\n\n        listItem.innerText\n          = `${listOfPhonesDetailes.id} === ${listOfPhonesDetailes.name}`;\n        ul.append(listItem);\n      });\n  });\n\n  return Promise.allSettled(resultArr);\n}\n\nconst phones = getPhones(url);\n\nconst phonesIDArr = [];\n\nphones\n  .then((res) => {\n    for (const phone of res) {\n      phonesIDArr.push(phone.id);\n    }\n\n    return phonesIDArr;\n  })\n  .then((array) => {\n    getFirstReceivedDetails(array);\n\n    getAllSuccessfulDetails(array).then(() =>\n      document.body.append(allSuccessArea)\n    );\n  });\n"]}